#N canvas 382 249 1302 953 12;
#X obj 83 137 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 83 207 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 621 40 plnf_version;
#X obj 39 579 netsend -u -b;
#X text 280 401 connect to test;
#X msg 39 403 disconnect \, connect localhost 8005;
#X msg 97 447 /a/b/c 1 2 3 string 5 6 somethingelse 0.1 0.2 0.3;
#X text 106 137 message to format;
#X text 105 207 list (usually will want to prepend send and remove 'list' using [list trim]);
#X msg 106 474 send /a/b/c 1 2 3 string 5 6 somethingelse 0.1 0.2 0.3;
#X obj 97 516 slash.oscformat send;
#X text 85 281 send (optional): if created as slash.oscformat send \, the formated message is ready for be connected to netsend (otherwise it will need to pass throguh [list prepend send]->[list trim];
#X text 462 447 you can send the osc message like this;
#X text 501 472 or with a 'send' before;
#X text 561 492 (both ways work well);
#X obj -1 -1 cnv 15 805 23 empty empty slash.oscformat 8 10 0 20 #282d39 #efefef 0;
#X obj -1 111 cnv 15 805 17 empty empty inlets 8 8 0 12 #282d39 #efefef 0;
#X obj 0 185 cnv 15 805 17 empty empty outlets 8 8 0 12 #282d39 #efefef 0;
#X obj -1 346 cnv 15 805 17 empty empty example 8 8 0 12 #282d39 #efefef 0;
#X obj 0 264 cnv 15 805 17 empty empty arguments 8 8 0 12 #282d39 #efefef 0;
#X text 32 48 util for formating OSC messages using slashes;
#X obj 339 586 planifolia/osc.io;
#X text 454 585 (already uses slash-style format);
#X text 272 585 also see:;
#X connect 5 0 3 0;
#X connect 6 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 3 0;
