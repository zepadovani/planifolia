#N canvas 472 23 822 798 12;
#X declare -path planifolia;
#X msg 235 350 10 20 30 40 50;
#X obj 83 137 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 621 40 plnf_version;
#X obj 83 237 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 83 181 cnv 18 3 17 empty empty 1 5 9 0 14 #dcdcdc #9c9c9c 0;
#X msg 235 325 list a b c d e;
#X text 105 237 element;
#X obj 68 438 ls.getRotate;
#X floatatom 70 297 5 0 0 0 - - - 0;
#X obj 68 489 print;
#X text 103 137 float (int): index;
#X text 103 181 list: list to rotate through;
#X text 103 159 bang: repeats last index;
#X obj 95 340 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X msg 234 403 a b c d;
#X text 297 406 will be converted to list;
#X text 346 339 sets list to iterate;
#X obj -1 -1 cnv 15 805 23 empty empty ls.get 8 10 0 20 #282d39 #efefef 0;
#X obj -1 108 cnv 15 805 17 empty empty inlets 8 8 0 12 #282d39 #efefef 0;
#X obj -1 216 cnv 15 805 17 empty empty outlets 8 8 0 12 #282d39 #efefef 0;
#X obj -1 273 cnv 15 805 17 empty empty example 8 8 0 12 #282d39 #efefef 0;
#X text 32 48 get the element of the list by index. If N is less than 0 or greater than list length \, it will rotate through the list.;
#X text 33 87 same as [ls.getRotate];
#X obj 639 299 declare -path planifolia;
#X connect 0 0 7 1;
#X connect 5 0 7 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 13 0 7 0;
#X connect 14 0 7 1;
