#N canvas 124 23 1655 821 12;
#X obj 48 186 array size;
#X obj -82 186 array size;
#X obj 62 241 ==;
#X obj 62 265 sel 0;
#X msg 62 289 sizes don't match;
#X obj -84 248 until;
#X obj -84 302 f;
#X obj -56 302 + 1;
#X msg -66 280 0;
#X obj -84 420 array get;
#X msg -54 398 1;
#X obj -14 420 array get;
#X msg 16 398 1;
#X obj -52 376 loadbang;
#X obj -82 208 t f f b;
#X obj -82 20 inlet;
#X obj 132 548 outlet;
#X obj -82 119 t b b b b b;
#X obj -84 325 t f f f;
#X obj 44 518 t f f;
#X obj 62 313 print \$0-array.binop;
#N canvas 0 23 450 300 \$0-binop 1;
#X obj 10 10 r 1079-binop_in1;
#X obj 170 10 r 1079-binop_in2;
#X obj 10 40 expr ($f1-$f2)/($f1+$f2);
#X obj 10 70 s 1079-binop_out;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X restore 289 53 pd \$0-binop;
#X obj 754 133 pdcontrol;
#X msg 754 111 args 0;
#X obj -15 159 symbol \$1;
#X obj 115 159 symbol \$2;
#X obj 754 154 list trim;
#X obj 824 154 list length;
#X obj -13 444 s \$0-binop_in2;
#X obj -117 444 s \$0-binop_in1;
#X obj 44 496 r \$0-binop_out;
#X obj 539 5 loadbang;
#X obj 914 327 sel 1;
#X obj 664 22 f \$0;
#X obj 14 548 array set \$0arr;
#X obj 824 227 sel 1;
#X obj 289 85 table \$0arr 2;
#X obj 196 159 symbol \$3;
#X obj 1003 274 pdcontrol;
#X msg 1003 251 args 0;
#X obj 1003 295 list trim;
#X obj 1003 321 list split 3;
#X msg 914 468 \; pd-1079-binop obj 10 40 expr ($f1-$f2)/($f1+$f2)
\;;
#X msg 1010 228 addsemi;
#X msg 1059 249 set;
#X obj 962 326 f \$0;
#X msg 962 347 add2 pd-\$1-binop obj 10 40;
#X obj 914 404 ls.iter;
#X msg 914 427 add2 \$1;
#X msg 868 445 addsemi;
#X obj 914 376 symbol +;
#X obj 866 176 <= 3;
#X msg 664 558 \; pd-\$1-binop obj 10 70 s \$1-binop_out \; pd-\$1-binop
connect 0 0 2 0 \; pd-\$1-binop connect 1 0 2 1 \; pd-\$1-binop connect
2 0 3 0 \;;
#X obj 824 205 >= 4;
#X obj 722 22 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj -82 48 route bang array1 array2 array3;
#X obj 824 176 t f f;
#X obj 866 196 t b f b b b, f 28;
#X obj 744 518 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1076 198 build binop message;
#X msg 753 31 \; pd-\$1-binop clear \; pd-\$1-binop obj 10 10 r \$1-binop_in1
\; pd-\$1-binop obj 170 10 r \$1-binop_in2 \;;
#X obj 664 46 t f b b f;
#X text 1032 30 cleans subpatch and creates inputs;
#X text 768 517 creates binop obj;
#X text 942 577 creates outputs and connects everything;
#X connect 0 0 2 1;
#X connect 1 0 14 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 20 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 18 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 29 0;
#X connect 10 0 9 1;
#X connect 11 0 28 0;
#X connect 12 0 11 1;
#X connect 13 0 10 0;
#X connect 13 0 12 0;
#X connect 14 0 5 0;
#X connect 14 1 2 0;
#X connect 14 2 8 0;
#X connect 15 0 55 0;
#X connect 17 0 1 0;
#X connect 17 1 0 0;
#X connect 17 2 24 0;
#X connect 17 3 25 0;
#X connect 18 0 9 0;
#X connect 18 1 11 0;
#X connect 18 2 34 1;
#X connect 19 0 34 0;
#X connect 19 1 16 0;
#X connect 22 0 26 0;
#X connect 23 0 22 0;
#X connect 24 0 1 1;
#X connect 24 0 9 2;
#X connect 25 0 0 1;
#X connect 25 0 11 2;
#X connect 26 0 27 0;
#X connect 27 0 56 0;
#X connect 30 0 19 0;
#X connect 31 0 33 0;
#X connect 32 0 50 0;
#X connect 32 1 39 0;
#X connect 33 0 61 0;
#X connect 35 0 37 0;
#X connect 37 0 34 2;
#X connect 38 0 40 0;
#X connect 39 0 38 0;
#X connect 40 0 41 0;
#X connect 41 1 47 0;
#X connect 43 0 42 0;
#X connect 44 0 42 0;
#X connect 45 0 46 0;
#X connect 46 0 42 0;
#X connect 47 0 48 0;
#X connect 48 0 42 0;
#X connect 49 0 42 0;
#X connect 50 0 47 0;
#X connect 51 0 57 0;
#X connect 53 0 35 0;
#X connect 54 0 33 0;
#X connect 55 0 17 0;
#X connect 55 1 24 1;
#X connect 55 2 25 1;
#X connect 55 3 37 1;
#X connect 56 0 53 0;
#X connect 56 1 51 0;
#X connect 57 0 49 0;
#X connect 57 1 32 0;
#X connect 57 2 45 0;
#X connect 57 3 43 0;
#X connect 57 4 44 0;
#X connect 58 0 42 0;
#X connect 61 0 52 0;
#X connect 61 1 58 0;
#X connect 61 2 23 0;
#X connect 61 3 60 0;
